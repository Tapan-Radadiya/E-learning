// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: gRPC/protoFile/trigger_user_event.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FetchEventXpPointsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XpEvent       string                 `protobuf:"bytes,1,opt,name=xpEvent,proto3" json:"xpEvent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchEventXpPointsRequest) Reset() {
	*x = FetchEventXpPointsRequest{}
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchEventXpPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchEventXpPointsRequest) ProtoMessage() {}

func (x *FetchEventXpPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchEventXpPointsRequest.ProtoReflect.Descriptor instead.
func (*FetchEventXpPointsRequest) Descriptor() ([]byte, []int) {
	return file_gRPC_protoFile_trigger_user_event_proto_rawDescGZIP(), []int{0}
}

func (x *FetchEventXpPointsRequest) GetXpEvent() string {
	if x != nil {
		return x.XpEvent
	}
	return ""
}

type FetchEventXpPointsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XpEvent       string                 `protobuf:"bytes,1,opt,name=xpEvent,proto3" json:"xpEvent,omitempty"`
	XpPoints      int32                  `protobuf:"varint,2,opt,name=xpPoints,proto3" json:"xpPoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchEventXpPointsResponse) Reset() {
	*x = FetchEventXpPointsResponse{}
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchEventXpPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchEventXpPointsResponse) ProtoMessage() {}

func (x *FetchEventXpPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchEventXpPointsResponse.ProtoReflect.Descriptor instead.
func (*FetchEventXpPointsResponse) Descriptor() ([]byte, []int) {
	return file_gRPC_protoFile_trigger_user_event_proto_rawDescGZIP(), []int{1}
}

func (x *FetchEventXpPointsResponse) GetXpEvent() string {
	if x != nil {
		return x.XpEvent
	}
	return ""
}

func (x *FetchEventXpPointsResponse) GetXpPoints() int32 {
	if x != nil {
		return x.XpPoints
	}
	return 0
}

type FetchXpDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchXpDataRequest) Reset() {
	*x = FetchXpDataRequest{}
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchXpDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchXpDataRequest) ProtoMessage() {}

func (x *FetchXpDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchXpDataRequest.ProtoReflect.Descriptor instead.
func (*FetchXpDataRequest) Descriptor() ([]byte, []int) {
	return file_gRPC_protoFile_trigger_user_event_proto_rawDescGZIP(), []int{2}
}

func (x *FetchXpDataRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FetchXpDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XpPoint       int32                  `protobuf:"varint,1,opt,name=xp_point,json=xpPoint,proto3" json:"xp_point,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchXpDataResponse) Reset() {
	*x = FetchXpDataResponse{}
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchXpDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchXpDataResponse) ProtoMessage() {}

func (x *FetchXpDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchXpDataResponse.ProtoReflect.Descriptor instead.
func (*FetchXpDataResponse) Descriptor() ([]byte, []int) {
	return file_gRPC_protoFile_trigger_user_event_proto_rawDescGZIP(), []int{3}
}

func (x *FetchXpDataResponse) GetXpPoint() int32 {
	if x != nil {
		return x.XpPoint
	}
	return 0
}

func (x *FetchXpDataResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type XpEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XpEvent       string                 `protobuf:"bytes,2,opt,name=xpEvent,proto3" json:"xpEvent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XpEventRequest) Reset() {
	*x = XpEventRequest{}
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XpEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XpEventRequest) ProtoMessage() {}

func (x *XpEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XpEventRequest.ProtoReflect.Descriptor instead.
func (*XpEventRequest) Descriptor() ([]byte, []int) {
	return file_gRPC_protoFile_trigger_user_event_proto_rawDescGZIP(), []int{4}
}

func (x *XpEventRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *XpEventRequest) GetXpEvent() string {
	if x != nil {
		return x.XpEvent
	}
	return ""
}

type XpEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XpPoint       int32                  `protobuf:"varint,1,opt,name=xp_point,json=xpPoint,proto3" json:"xp_point,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XpEventResponse) Reset() {
	*x = XpEventResponse{}
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XpEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XpEventResponse) ProtoMessage() {}

func (x *XpEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_protoFile_trigger_user_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XpEventResponse.ProtoReflect.Descriptor instead.
func (*XpEventResponse) Descriptor() ([]byte, []int) {
	return file_gRPC_protoFile_trigger_user_event_proto_rawDescGZIP(), []int{5}
}

func (x *XpEventResponse) GetXpPoint() int32 {
	if x != nil {
		return x.XpPoint
	}
	return 0
}

func (x *XpEventResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_gRPC_protoFile_trigger_user_event_proto protoreflect.FileDescriptor

const file_gRPC_protoFile_trigger_user_event_proto_rawDesc = "" +
	"\n" +
	"'gRPC/protoFile/trigger_user_event.proto\x12\x0eTriggerXPEvent\"5\n" +
	"\x19FetchEventXpPointsRequest\x12\x18\n" +
	"\axpEvent\x18\x01 \x01(\tR\axpEvent\"R\n" +
	"\x1aFetchEventXpPointsResponse\x12\x18\n" +
	"\axpEvent\x18\x01 \x01(\tR\axpEvent\x12\x1a\n" +
	"\bxpPoints\x18\x02 \x01(\x05R\bxpPoints\",\n" +
	"\x12FetchXpDataRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\"H\n" +
	"\x13FetchXpDataResponse\x12\x19\n" +
	"\bxp_point\x18\x01 \x01(\x05R\axpPoint\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId\"B\n" +
	"\x0eXpEventRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x18\n" +
	"\axpEvent\x18\x02 \x01(\tR\axpEvent\"D\n" +
	"\x0fXpEventResponse\x12\x19\n" +
	"\bxp_point\x18\x01 \x01(\x05R\axpPoint\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\tR\x06userId2\xb3\x02\n" +
	"\x19UserXpEventTriggerService\x12U\n" +
	"\x12TriggerUserXPEvent\x12\x1e.TriggerXPEvent.XpEventRequest\x1a\x1f.TriggerXPEvent.XpEventResponse\x12T\n" +
	"\tGetUserXp\x12\".TriggerXPEvent.FetchXpDataRequest\x1a#.TriggerXPEvent.FetchXpDataResponse\x12i\n" +
	"\x10GetEventXpPoints\x12).TriggerXPEvent.FetchEventXpPointsRequest\x1a*.TriggerXPEvent.FetchEventXpPointsResponseB'Z%progression_service/gRPC/protoFile;pbb\x06proto3"

var (
	file_gRPC_protoFile_trigger_user_event_proto_rawDescOnce sync.Once
	file_gRPC_protoFile_trigger_user_event_proto_rawDescData []byte
)

func file_gRPC_protoFile_trigger_user_event_proto_rawDescGZIP() []byte {
	file_gRPC_protoFile_trigger_user_event_proto_rawDescOnce.Do(func() {
		file_gRPC_protoFile_trigger_user_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gRPC_protoFile_trigger_user_event_proto_rawDesc), len(file_gRPC_protoFile_trigger_user_event_proto_rawDesc)))
	})
	return file_gRPC_protoFile_trigger_user_event_proto_rawDescData
}

var file_gRPC_protoFile_trigger_user_event_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gRPC_protoFile_trigger_user_event_proto_goTypes = []any{
	(*FetchEventXpPointsRequest)(nil),  // 0: TriggerXPEvent.FetchEventXpPointsRequest
	(*FetchEventXpPointsResponse)(nil), // 1: TriggerXPEvent.FetchEventXpPointsResponse
	(*FetchXpDataRequest)(nil),         // 2: TriggerXPEvent.FetchXpDataRequest
	(*FetchXpDataResponse)(nil),        // 3: TriggerXPEvent.FetchXpDataResponse
	(*XpEventRequest)(nil),             // 4: TriggerXPEvent.XpEventRequest
	(*XpEventResponse)(nil),            // 5: TriggerXPEvent.XpEventResponse
}
var file_gRPC_protoFile_trigger_user_event_proto_depIdxs = []int32{
	4, // 0: TriggerXPEvent.UserXpEventTriggerService.TriggerUserXPEvent:input_type -> TriggerXPEvent.XpEventRequest
	2, // 1: TriggerXPEvent.UserXpEventTriggerService.GetUserXp:input_type -> TriggerXPEvent.FetchXpDataRequest
	0, // 2: TriggerXPEvent.UserXpEventTriggerService.GetEventXpPoints:input_type -> TriggerXPEvent.FetchEventXpPointsRequest
	5, // 3: TriggerXPEvent.UserXpEventTriggerService.TriggerUserXPEvent:output_type -> TriggerXPEvent.XpEventResponse
	3, // 4: TriggerXPEvent.UserXpEventTriggerService.GetUserXp:output_type -> TriggerXPEvent.FetchXpDataResponse
	1, // 5: TriggerXPEvent.UserXpEventTriggerService.GetEventXpPoints:output_type -> TriggerXPEvent.FetchEventXpPointsResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gRPC_protoFile_trigger_user_event_proto_init() }
func file_gRPC_protoFile_trigger_user_event_proto_init() {
	if File_gRPC_protoFile_trigger_user_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gRPC_protoFile_trigger_user_event_proto_rawDesc), len(file_gRPC_protoFile_trigger_user_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gRPC_protoFile_trigger_user_event_proto_goTypes,
		DependencyIndexes: file_gRPC_protoFile_trigger_user_event_proto_depIdxs,
		MessageInfos:      file_gRPC_protoFile_trigger_user_event_proto_msgTypes,
	}.Build()
	File_gRPC_protoFile_trigger_user_event_proto = out.File
	file_gRPC_protoFile_trigger_user_event_proto_goTypes = nil
	file_gRPC_protoFile_trigger_user_event_proto_depIdxs = nil
}
